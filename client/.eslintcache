[{"D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\index.js":"1","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\App.js":"2","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\Registration.js":"3","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\Login.js":"4","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\game\\online\\publicRoom.js":"5"},{"size":159,"mtime":1611082596777,"results":"6","hashOfConfig":"7"},{"size":6068,"mtime":1612101142934,"results":"8","hashOfConfig":"7"},{"size":2084,"mtime":1611082678810,"results":"9","hashOfConfig":"7"},{"size":2922,"mtime":1611524708360,"results":"10","hashOfConfig":"7"},{"size":905,"mtime":1611082678810,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kzx9t8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\index.js",[],["26","27"],"D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\App.js",["28","29","30","31","32","33","34"],"D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\Registration.js",["35"],"import axios from 'axios'; \r\nimport React, { useState } from 'react';\r\n\r\nconst Registration = () => {\r\n    const [usernameInput, setUsernameInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n\r\n    const handleUsernameChange = (newValue) => {\r\n        setUsernameInput(newValue);\r\n    }\r\n\r\n    const handlePasswordChange = (newValue) => {\r\n        setPasswordInput(newValue);\r\n    }\r\n\r\n    const handleEmailChange = (newValue) => {\r\n        setEmailInput(newValue);\r\n    }\r\n\r\n    const sendRegisterUserForm = async () => {\r\n        const user = {\r\n            username: usernameInput,\r\n            password: passwordInput,\r\n            email: emailInput\r\n        }\r\n        \r\n        const endpoint = `${process.env.REACT_APP_API_BASE_ADDRESS}/api/v1/auth/register`\r\n        const res = await fetch(endpoint, \r\n        {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n            },\r\n            body: JSON.stringify(user),\r\n        });\r\n        const parsedRes = await res.json();\r\n        console.log(parsedRes);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n                Registration\r\n            <br />\r\n            <div>\r\n                <label>Username</label>\r\n                <input type=\"text\" value={usernameInput} onChange={(e) => handleUsernameChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Password</label>\r\n                <input type=\"password\" value={passwordInput} onChange={(e) => handlePasswordChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Email</label>\r\n                <input type=\"email\" value={emailInput} onChange={(e) => handleEmailChange(e.target.value)} />\r\n            </div>\r\n            <button onClick={sendRegisterUserForm}>Submit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\components\\Login.js",["36","37","38"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nrequire('dotenv').config();\r\n\r\nconst Login = () => {\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    const handleEmailChange = (newValue) => {\r\n        setEmailInput(newValue);\r\n    }\r\n\r\n    const handlePasswordChange = (newValue) => {\r\n        setPasswordInput(newValue);\r\n    }\r\n\r\n    const getInfoOnLoggedUser = async () => {\r\n        const endpoint = `${process.env.REACT_APP_API_BASE_ADDRESS}/api/v1/user/greeting`\r\n        const res = await fetch(endpoint, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Authorization': `Bearer ${localStorage['bearer-token']}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const payload = await res.json();\r\n        console.log(payload);\r\n\r\n        if (res.status === 200) {\r\n            console.log('works ok');\r\n        }\r\n        else {\r\n            // TODO: Add better error handling towards the user.\r\n            console.error(`Not good ${res}`);\r\n        }\r\n    }\r\n\r\n    const loginUser = async () => {\r\n        const requestBody = {\r\n            email: emailInput,\r\n            password: passwordInput\r\n        }\r\n\r\n        console.log(process.env);\r\n\r\n        const endpoint = `${process.env.REACT_APP_API_BASE_ADDRESS}/api/v1/auth/login`\r\n        const res = await fetch(endpoint, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        });\r\n\r\n        if (res.status === 200) {\r\n            const payload = await res.json();\r\n            localStorage.setItem('bearer-token', payload.token);\r\n            console.log('Logged in.');\r\n        }\r\n        else {\r\n            // TODO: Add better error handling towards the user.\r\n            console.error(`Not good ${res}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            Login\r\n            <br />\r\n            <div>\r\n                <label>Email</label>\r\n                <input type=\"text\" value={emailInput} onChange={(e) => handleEmailChange(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Password</label>\r\n                <input type=\"password\" value={passwordInput} onChange={(e) => handlePasswordChange(e.target.value)} />\r\n            </div>\r\n            <button onClick={loginUser}>Log in</button>\r\n            <div>The user is {userName}</div>\r\n            <button onClick={getInfoOnLoggedUser}>Logged in test</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Forks\\socket-auth-feature\\tetris-scramble-client\\client\\src\\game\\online\\publicRoom.js",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":26,"column":8,"nodeType":"52","endLine":26,"endColumn":10,"suggestions":"53"},{"ruleId":"45","severity":1,"message":"54","line":30,"column":17,"nodeType":"47","messageId":"48","endLine":30,"endColumn":24},{"ruleId":"45","severity":1,"message":"55","line":30,"column":26,"nodeType":"47","messageId":"48","endLine":30,"endColumn":32},{"ruleId":"45","severity":1,"message":"56","line":32,"column":13,"nodeType":"47","messageId":"48","endLine":32,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":41,"column":31,"nodeType":"59","messageId":"60","endLine":41,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"61","line":2,"column":27,"nodeType":"47","messageId":"48","endLine":2,"endColumn":36},{"ruleId":"45","severity":1,"message":"62","line":8,"column":22,"nodeType":"47","messageId":"48","endLine":8,"endColumn":33},{"ruleId":"41","replacedBy":"63"},{"ruleId":"43","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'parse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'join'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'sockets' is assigned a value but never used.","'roomId' is assigned a value but never used.","'positionY' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'setUserName' is assigned a value but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [join]",{"range":"70","text":"71"},[994,996],"[join]"]